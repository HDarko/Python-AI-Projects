                                                        README
   #Note that code currently works because Jupyter has the needed Keras libraries for Machine Learning installed
   To run the code:
    
   - First generate the necessary puzzles file by runing PuzzleGen's function BoardStateGen(size,randM,num)
       with size being 11, while randM is the number of random moves from the completed state the state 
       should have and num being the number of states in the file. This function creates the file 
       "11final" +ranMoves+ ".txt"
       #-The files for training the neural network is generated by BoardStateGen(15,45,3000)
       -Create the file for testing the heuristics using your chosen randM and num but keep size as 11\
       as 15 is used to create the training files.
       
   -Then in TestingAgent file, uncomment Heuristics("11puzzles.txt",11) to generate the required DataSet and Label file to
   train the neural network if they dont exist already. This uses the code from TrainingAgent.py
   
   -The neural network should be automaticaly trained if in Jupyter as it should run independent of any function.
   The results of the training will be displayed.
   
   -Then enter in TestingAgent(file,numofStates), the name of the file generated with BoardStateGen(11,-,-).
     Now the first n states in that file shall be solved by a heuristic search algorithm using inadmsiible heuristics
     and the Neural Network heuristic and n is the numofStates
     -The result should be the current puzzle state being solved, the heuristic used to solve it and 
     (length of solution,number of nodes in Closed list, number of nodes in Open List) if a solution is found.
    
